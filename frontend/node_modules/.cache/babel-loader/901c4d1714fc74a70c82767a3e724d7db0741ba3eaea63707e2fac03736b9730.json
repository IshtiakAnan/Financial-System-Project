{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  user: null,\n  accessToken: localStorage.getItem('accessToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  isLoading: false,\n  error: null\n};\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post('http://localhost:8000/login', credentials);\n    const {\n      access_token,\n      refresh_token,\n      user\n    } = response.data;\n\n    // Store tokens in localStorage\n    localStorage.setItem('accessToken', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    return {\n      access_token,\n      refresh_token,\n      user\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed');\n  }\n});\nexport const refreshAccessToken = createAsyncThunk('auth/refreshToken', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const {\n      refreshToken\n    } = getState().auth;\n    const response = await axios.post('http://localhost:8000/token/refresh', {\n      refresh_token: refreshToken\n    });\n    const {\n      access_token\n    } = response.data;\n    localStorage.setItem('accessToken', access_token);\n    return {\n      access_token\n    };\n  } catch (error) {\n    return rejectWithValue('Token refresh failed');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.error = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.accessToken = action.payload.access_token;\n      state.refreshToken = action.payload.refresh_token;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(refreshAccessToken.fulfilled, (state, action) => {\n      state.accessToken = action.payload.access_token;\n    }).addCase(refreshAccessToken.rejected, state => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    });\n  }\n});\nexport const {\n  logout,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","user","accessToken","localStorage","getItem","refreshToken","isLoading","error","login","credentials","rejectWithValue","response","post","access_token","refresh_token","data","setItem","_error$response","_error$response$data","detail","refreshAccessToken","_","getState","auth","authSlice","name","reducers","logout","state","removeItem","clearError","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/2-1 Project/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface User {\n  id: number;\n  username: string;\n  email: string;\n  role: {\n    name: string;\n    description: string;\n  };\n}\n\ninterface AuthState {\n  user: User | null;\n  accessToken: string | null;\n  refreshToken: string | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  accessToken: localStorage.getItem('accessToken'),\n  refreshToken: localStorage.getItem('refreshToken'),\n  isLoading: false,\n  error: null,\n};\n\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials: { username: string; password: string }, { rejectWithValue }) => {\n    try {\n      const response = await axios.post('http://localhost:8000/login', credentials);\n      const { access_token, refresh_token, user } = response.data;\n      \n      // Store tokens in localStorage\n      localStorage.setItem('accessToken', access_token);\n      localStorage.setItem('refreshToken', refresh_token);\n      \n      return { access_token, refresh_token, user };\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Login failed');\n    }\n  }\n);\n\nexport const refreshAccessToken = createAsyncThunk(\n  'auth/refreshToken',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      const { refreshToken } = (getState() as { auth: AuthState }).auth;\n      const response = await axios.post('http://localhost:8000/token/refresh', {\n        refresh_token: refreshToken,\n      });\n      \n      const { access_token } = response.data;\n      localStorage.setItem('accessToken', access_token);\n      \n      return { access_token };\n    } catch (error: any) {\n      return rejectWithValue('Token refresh failed');\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: (state) => {\n      state.user = null;\n      state.accessToken = null;\n      state.refreshToken = null;\n      state.error = null;\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n    },\n    clearError: (state) => {\n      state.error = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.accessToken = action.payload.access_token;\n        state.refreshToken = action.payload.refresh_token;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n      })\n      .addCase(refreshAccessToken.fulfilled, (state, action) => {\n        state.accessToken = action.payload.access_token;\n      })\n      .addCase(refreshAccessToken.rejected, (state) => {\n        state.user = null;\n        state.accessToken = null;\n        state.refreshToken = null;\n        localStorage.removeItem('accessToken');\n        localStorage.removeItem('refreshToken');\n      });\n  },\n});\n\nexport const { logout, clearError } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}