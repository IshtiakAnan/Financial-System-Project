{"ast":null,"code":"var _jsxFileName = \"D:\\\\2-1 Project\\\\frontend\\\\src\\\\components\\\\PrivateRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  requiredRoles\n}) => {\n  _s();\n  const location = useLocation();\n  const {\n    accessToken,\n    user\n  } = useSelector(state => state.auth);\n  if (!accessToken) {\n    // Redirect to login if not authenticated\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  if (requiredRoles && user && !requiredRoles.includes(user.role.name)) {\n    // Redirect to dashboard if user doesn't have required role\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/dashboard\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"aFabAa6WE0u/fRK0VWAe67JRpek=\", false, function () {\n  return [useLocation, useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useSelector","jsxDEV","_jsxDEV","PrivateRoute","children","requiredRoles","_s","location","accessToken","user","state","auth","to","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","role","name","_c","$RefreshReg$"],"sources":["D:/2-1 Project/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\ninterface PrivateRouteProps {\n  children: React.ReactElement;\n  requiredRoles?: string[];\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children, requiredRoles }) => {\n  const location = useLocation();\n  const { accessToken, user } = useSelector((state: RootState) => state.auth);\n\n  if (!accessToken) {\n    // Redirect to login if not authenticated\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  if (requiredRoles && user && !requiredRoles.includes(user.role.name)) {\n    // Redirect to dashboard if user doesn't have required role\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  return children;\n};\n\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,YAAyC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjF,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES,WAAW;IAAEC;EAAK,CAAC,GAAGT,WAAW,CAAEU,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAAC;EAE3E,IAAI,CAACH,WAAW,EAAE;IAChB;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,QAAQ;MAACF,KAAK,EAAE;QAAEG,IAAI,EAAEN;MAAS,CAAE;MAACO,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,IAAIb,aAAa,IAAII,IAAI,IAAI,CAACJ,aAAa,CAACc,QAAQ,CAACV,IAAI,CAACW,IAAI,CAACC,IAAI,CAAC,EAAE;IACpE;IACA,oBAAOnB,OAAA,CAACJ,QAAQ;MAACc,EAAE,EAAC,YAAY;MAACE,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC7C;EAEA,OAAOd,QAAQ;AACjB,CAAC;AAACE,EAAA,CAfIH,YAAyC;EAAA,QAC5BJ,WAAW,EACEC,WAAW;AAAA;AAAAsB,EAAA,GAFrCnB,YAAyC;AAiB/C,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}