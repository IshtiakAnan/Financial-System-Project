{"ast":null,"code":"import axios from 'axios';\nimport { store } from '../store';\nimport { refreshAccessToken, logout } from '../store/slices/authSlice';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(config => {\n  const token = store.getState().auth.accessToken;\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // If error is 401 and we haven't tried to refresh token yet\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Attempt to refresh the token\n      await store.dispatch(refreshAccessToken());\n\n      // Retry the original request with new token\n      const token = store.getState().auth.accessToken;\n      originalRequest.headers.Authorization = `Bearer ${token}`;\n      return api(originalRequest);\n    } catch (refreshError) {\n      // If refresh fails, logout user\n      store.dispatch(logout());\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const authAPI = {\n  login: credentials => api.post('/login', credentials),\n  refreshToken: refreshToken => api.post('/token/refresh', {\n    refresh_token: refreshToken\n  })\n};\nexport const dashboardAPI = {\n  getMetrics: () => api.get('/dashboard/metrics')\n};\nexport const studentsAPI = {\n  getAll: params => api.get('/students', {\n    params\n  }),\n  getById: id => api.get(`/students/${id}`),\n  create: data => api.post('/students', data),\n  update: (id, data) => api.put(`/students/${id}`, data),\n  delete: id => api.delete(`/students/${id}`)\n};\nexport const feesAPI = {\n  getAll: params => api.get('/fees', {\n    params\n  }),\n  getById: id => api.get(`/fees/${id}`),\n  create: data => api.post('/fees', data),\n  update: (id, data) => api.put(`/fees/${id}`, data),\n  delete: id => api.delete(`/fees/${id}`)\n};\nexport const paymentsAPI = {\n  getAll: params => api.get('/payments', {\n    params\n  }),\n  getById: id => api.get(`/payments/${id}`),\n  create: data => api.post('/payments', data),\n  update: (id, data) => api.put(`/payments/${id}`, data),\n  delete: id => api.delete(`/payments/${id}`)\n};\nexport const invoicesAPI = {\n  getAll: params => api.get('/invoices', {\n    params\n  }),\n  getById: id => api.get(`/invoices/${id}`),\n  create: data => api.post('/invoices', data),\n  update: (id, data) => api.put(`/invoices/${id}`, data),\n  delete: id => api.delete(`/invoices/${id}`),\n  download: id => api.get(`/invoices/${id}/download`, {\n    responseType: 'blob'\n  })\n};\nexport default api;","map":{"version":3,"names":["axios","store","refreshAccessToken","logout","api","create","baseURL","headers","interceptors","request","use","config","token","getState","auth","accessToken","Authorization","error","Promise","reject","response","_error$response","originalRequest","status","_retry","dispatch","refreshError","authAPI","login","credentials","post","refreshToken","refresh_token","dashboardAPI","getMetrics","get","studentsAPI","getAll","params","getById","id","data","update","put","delete","feesAPI","paymentsAPI","invoicesAPI","download","responseType"],"sources":["D:/2-1 Project/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { store } from '../store';\nimport { refreshAccessToken, logout } from '../store/slices/authSlice';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor for adding auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = store.getState().auth.accessToken;\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for handling token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // If error is 401 and we haven't tried to refresh token yet\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        // Attempt to refresh the token\n        await store.dispatch(refreshAccessToken());\n        \n        // Retry the original request with new token\n        const token = store.getState().auth.accessToken;\n        originalRequest.headers.Authorization = `Bearer ${token}`;\n        return api(originalRequest);\n      } catch (refreshError) {\n        // If refresh fails, logout user\n        store.dispatch(logout());\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const authAPI = {\n  login: (credentials: { username: string; password: string }) =>\n    api.post('/login', credentials),\n  refreshToken: (refreshToken: string) =>\n    api.post('/token/refresh', { refresh_token: refreshToken }),\n};\n\nexport const dashboardAPI = {\n  getMetrics: () => api.get('/dashboard/metrics'),\n};\n\nexport const studentsAPI = {\n  getAll: (params?: { page?: number; limit?: number; search?: string }) =>\n    api.get('/students', { params }),\n  getById: (id: number) => api.get(`/students/${id}`),\n  create: (data: any) => api.post('/students', data),\n  update: (id: number, data: any) => api.put(`/students/${id}`, data),\n  delete: (id: number) => api.delete(`/students/${id}`),\n};\n\nexport const feesAPI = {\n  getAll: (params?: { page?: number; limit?: number; student_id?: number }) =>\n    api.get('/fees', { params }),\n  getById: (id: number) => api.get(`/fees/${id}`),\n  create: (data: any) => api.post('/fees', data),\n  update: (id: number, data: any) => api.put(`/fees/${id}`, data),\n  delete: (id: number) => api.delete(`/fees/${id}`),\n};\n\nexport const paymentsAPI = {\n  getAll: (params?: { page?: number; limit?: number; student_id?: number }) =>\n    api.get('/payments', { params }),\n  getById: (id: number) => api.get(`/payments/${id}`),\n  create: (data: any) => api.post('/payments', data),\n  update: (id: number, data: any) => api.put(`/payments/${id}`, data),\n  delete: (id: number) => api.delete(`/payments/${id}`),\n};\n\nexport const invoicesAPI = {\n  getAll: (params?: { page?: number; limit?: number; student_id?: number }) =>\n    api.get('/invoices', { params }),\n  getById: (id: number) => api.get(`/invoices/${id}`),\n  create: (data: any) => api.post('/invoices', data),\n  update: (id: number, data: any) => api.put(`/invoices/${id}`, data),\n  delete: (id: number) => api.delete(`/invoices/${id}`),\n  download: (id: number) => api.get(`/invoices/${id}/download`, { responseType: 'blob' }),\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}